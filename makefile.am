# Subdirectories to compile recursively
SUBDIRS = @DIRECTORIES@

# Libraries we're building
lib_LIBRARIES = libvess.a libvess.so

# Source files for the libraries.  These are empty in this case, because
# we're building the libraries from already-compiled object files.
libvess_a_SOURCES =
libvess_so_SOURCES =

# Dependencies for the libraries.  These point to the various individual
# VESS libraries (libvsGraphics.a, for example).  When any of these change,
# we need to rebuild the monolithic libvess.a library again.
libvess_a_DEPENDENCIES = @VESS_LIBS@
libvess_so_DEPENDENCIES = $(libvess_a_DEPENDENCIES)

# Rule to make libvess.a
libvess.a: $(libvess_a_DEPENDENCIES)
	@for i in @DIRECTORIES@; \
	do \
		LIBVSOBJS="$$LIBVSOBJS "`ls $$i/*.$(OBJEXT)`; \
	done; \
	echo "Building libvess.a"; \
	ar ruc libvess.a $$LIBVSOBJS;

# Rule to make libvess.so
libvess.so: libvess.a $(libvess_so_DEPENDENCIES)
	@echo "Building libvess.so"
	rm -f $@
	$(CXX) $(LDFLAGS) -shared -o $@ @SO_LINK@ libvess.a @SO_NO_LINK@

# Rule to make the optional test directory.  This rule does nothing if
# no test directory exists.
.PHONY: test
test:
	@if test -d test ; then \
	    cd test; \
	    $(MAKE) all; \
	    cd ..; \
        fi

# Override automake's install rule for the libraries.  This is done to
# keep automake from running ranlib on the shared library (since we're
# not using libtool, automake doesn't know that libvess.so is a shared
# library).
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test x`echo $$p | awk -F \. '{print $$2}'` != xso ; then \
	    if test -f $$p; then \
	      p="`echo $$p | sed -e 's|^.*/||'`"; \
	      echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	      $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	    fi; \
	  fi;\
	done
