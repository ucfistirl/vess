# Libraries to make
lib_LIBRARIES = libvsEnvironment.a libvsEnvironment.so

# Sources for libvsEnvironment.a
libvsEnvironment_a_SOURCES = \
                       common/vsCal3DAnimationLoader.c++ \
                       common/vsCal3DLoader.c++ \
                       common/vsCOLLADAAnimation.c++ \
                       common/vsCOLLADABoolArray.c++ \
                       common/vsCOLLADAChannel.c++ \
                       common/vsCOLLADAChannelGroup.c++ \
                       common/vsCOLLADAController.c++ \
                       common/vsCOLLADADataArray.c++ \
                       common/vsCOLLADADataSource.c++ \
                       common/vsCOLLADAEffect.c++ \
                       common/vsCOLLADAEffectParameter.c++ \
                       common/vsCOLLADAFixedEffect.c++ \
                       common/vsCOLLADAFloatArray.c++ \
                       common/vsCOLLADAGeometry.c++ \
                       common/vsCOLLADAIDREFArray.c++ \
                       common/vsCOLLADAInputEntry.c++ \
                       common/vsCOLLADAIntArray.c++ \
                       common/vsCOLLADAKeyframe.c++ \
                       common/vsCOLLADALoader.c++ \
                       common/vsCOLLADANameArray.c++ \
                       common/vsCOLLADANode.c++ \
                       common/vsCOLLADANodeRef.c++ \
                       common/vsCOLLADASampler.c++ \
                       common/vsCOLLADASkin.c++ \
                       common/vsCOLLADASubmesh.c++ \
                       common/vsCOLLADATextureSet.c++ \
                       common/vsCOLLADATransform.c++

# Sources for libvsEnvironment.so (same as libvsEnvironment.a)
libvsEnvironment_so_SOURCES = $(libvsEnvironment_a_SOURCES)

# Extra sources for libvsEnvironment.a.  These are only compiled if certain 
# contitions in the configure process are met
EXTRA_libvsEnvironment_a_SOURCES = \
                                   common/vsMovieReader.c++ \
                                   common/vsMovieWriter.c++

# Extra sources for libvsEnvironment.so.  (Same as above)
EXTRA_libvsEnvironment_so_SOURCES = $(EXTRA_libvsEnvironment_a_SOURCES)

# Header files
include_HEADERS = \
                  common/vsCal3DAnimationLoader.h++ \
                  common/vsCal3DLoader.h++ \
                  common/vsCOLLADAAnimation.h++ \
                  common/vsCOLLADABoolArray.h++ \
                  common/vsCOLLADAChannel.h++ \
                  common/vsCOLLADAChannelGroup.h++ \
                  common/vsCOLLADAController.h++ \
                  common/vsCOLLADADataArray.h++ \
                  common/vsCOLLADADataSource.h++ \
                  common/vsCOLLADAEffect.h++ \
                  common/vsCOLLADAEffectParameter.h++ \
                  common/vsCOLLADAFixedEffect.h++ \
                  common/vsCOLLADAFloatArray.h++ \
                  common/vsCOLLADAGeometry.h++ \
                  common/vsCOLLADAIDREFArray.h++ \
                  common/vsCOLLADAInputEntry.h++ \
                  common/vsCOLLADAIntArray.h++ \
                  common/vsCOLLADALoader.h++ \
                  common/vsCOLLADAKeyframe.h++ \
                  common/vsCOLLADANameArray.h++ \
                  common/vsCOLLADANode.h++ \
                  common/vsCOLLADANodeRef.h++ \
                  common/vsCOLLADASampler.h++ \
                  common/vsCOLLADASkin.h++ \
                  common/vsCOLLADASubmesh.h++ \
                  common/vsCOLLADATextureSet.h++ \
                  common/vsCOLLADATransform.h++

# Header files for the above EXTRA sources
EXTRA_HEADERS = \
                common/vsMovieReader.h++ \
                common/vsMovieWriter.h++

# Extra dependencies for libvsEnvironment.a.  This reflects the additional
# dependencies necessary if any conditionally-compiled sources are used.
libvsEnvironment_a_DEPENDENCIES = @EXTRA_ENVIRONMENT_OBJECTS@

# Extra dependencies for libvsEnvironment.so. (Same as above)
libvsEnvironment_so_DEPENDENCIES = $(libvsEnvironment_a_DEPENDENCIES)

# Include directives for the compiler
INCLUDES = \
           -I../util/common \
           -I../util/@OS@ \
           -I../util/@SG@ \
           -I../graphics/common \
           -I../graphics/@SG@ \
           -I../graphics/@SG@_@WS@ \
           @GFX_INCLUDE_DIR@ \
           -I../sound/@AL@ \
           @SOUND_INCLUDE_DIR@ \
           -I../io/common \
           -I../io/@OS@ \
           -I../io/@WS@ \
           -I../io/@SG@_@WS@ \
           @IO_INCLUDE_DIR@ \
           -I../llio/@OS@ \
           -I../motion/common \
           -I../avatar/common \
           @XML_INCLUDE_DIR@ \
           @ATLAS_INCLUDE_DIR@ \
           @ENV_INCLUDE_DIR@

# Rule to make libvsEnvironment.so
libvsEnvironment.so: libvsEnvironment.a
	rm -f $@
	$(CXX) $(LDFLAGS) $(AM_LDFLAGS) -shared -o $@ @SO_LINK@ libvsEnvironment.a @SO_NO_LINK@

# Make target to install the extra headers specified above
install-data-local:
	@list='$(EXTRA_HEADERS)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(includeHEADERS_INSTALL) $$p $(DESTDIR)$(includedir)/$$f"; \
	    $(includeHEADERS_INSTALL) $$p $(DESTDIR)$(includedir)/$$f; \
	  else :; fi; \
	done
                                                                                
# Make target to uninstall the extra headers specified above
uninstall-local:
	@list='$(EXTRA_HEADERS)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	    rm -f $(DESTDIR)$(includedir)/$$f; \
	  else :; fi; \
        done


# Override automake's install rule for the libraries.  This is done to
# keep automake from running ranlib on the shared library (since we're
# not using libtool, automake doesn't know that libvess.so is a shared
# library).
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test x`echo $$p | awk -F \. '{print $$NF}'` != xso ; then \
	    if test -f $$p; then \
	      p="`echo $$p | sed -e 's|^.*/||'`"; \
	      echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	      $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	    fi; \
	  fi;\
	done
