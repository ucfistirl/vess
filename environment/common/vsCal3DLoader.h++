//------------------------------------------------------------------------
//
//    VIRTUAL ENVIRONMENT SOFTWARE SANDBOX (VESS)
//
//    Copyright (c) 2001, University of Central Florida
//
//       See the file LICENSE for license information
//
//    E-mail:  vess@ist.ucf.edu
//    WWW:     http://vess.ist.ucf.edu/
//
//------------------------------------------------------------------------
//
//    VESS Module:  vsCal3DLoader.h++
//
//    Description:  Loader for the .cfg files generated by the Cal3D
//                  exporter for 3DStudio.  A very simple file which
//                  just specifies all the other Cal3D files needed.
//
//    Author(s):    Duvan Cope
//
//------------------------------------------------------------------------

#ifndef VS_CAL3D_LOADER_HPP
#define VS_CAL3D_LOADER_HPP

#include "vsCal3DMeshLoader.h++"
#include "vsCal3DBoneLoader.h++"
#include "vsCal3DAnimationLoader.h++"
#include "vsSkeleton.h++"
#include "vsMatrix.h++"
#include "vsComponent.h++"
#include "vsSequencer.h++"

#ifdef WIN32
    #include <io.h>
    #define access _access
    #define R_OK   0x04
#else
    #include <unistd.h>
#endif

#ifndef __DIRECTORY_NODE__
#define __DIRECTORY_NODE__
struct DirectoryNode
{
   char *dirName;
   DirectoryNode *next;
};
#endif

class VS_ENVIRONMENT_DLL vsCal3DLoader : public vsObject
{
private:

    vsCal3DMeshLoader       *meshLoader;
    vsCal3DBoneLoader       *boneLoader;
    vsCal3DAnimationLoader  *animationLoader;
    vsMatrix                scaleMatrix;
    vsGrowableArray         *meshList;
    int                     meshCount;
    vsGrowableArray         *animationList;
    int                     animationCount;
    char                    *skeletonFilename;
    char                    *currentDirectory;
    DirectoryNode           *directoryList;
    
    char *                  findFile(char *filename);

VS_INTERNAL:

public:

                         vsCal3DLoader();
    virtual              ~vsCal3DLoader();

    virtual const char   *getClassName();
    void                 addFilePath(const char *dirName);

    void                 parseFile(char *filename);

    vsComponent          *getNewMesh();

    vsSkeleton           *getNewSkeleton();

    vsPathMotionManager  *getNewAnimation(char *name, vsSkeletonKinematics
                                          *skeletonKinematics);
    vsGrowableArray      *getAnimationNameList();
};

#endif
